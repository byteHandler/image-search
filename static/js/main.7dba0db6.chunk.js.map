{"version":3,"sources":["components/SearchInput.js","components/ImageComponent.js","components/ImageList.js","components/ButtonsComponent.js","components/PageButtonComponent.js","components/App.js","index.js"],"names":["SearchInput","state","inputValue","props","loading","onFormSubmit","event","preventDefault","setState","onSearchSubmit","className","onSubmit","this","type","placeholder","value","onChange","target","React","Component","ImageComponent","loaded","style","display","width","height","src","source","onLoad","addLoadCount","alt","ImageList","loadCount","images","length","searchInputRef","current","downloadFile","link","window","location","href","view","sIR","nextProps","nextState","img","map","image","largeImageURL","previewWidth","previewHeight","id","user","likes","downloads","onClick","marginTop","ButtonComponent","defaultButton","gridButton","listButton","marginBottom","zIndex","onGridClick","onListClick","PageButtonComponent","buttonTexts","clickedButtonIndex","buttons","text","i","marginLeft","marginRight","alert","class","App","buttonComponentRef","imageListRef","entry","a","axios","get","replace","response","data","hits","createRef","ref","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7dba0db6.chunk.js","sourcesContent":["import React from 'react';\nclass SearchInput extends React.Component{\n    state = {inputValue: this.props.inputValue,loading:'category'}\n    onFormSubmit =(event)=>{\n        event.preventDefault()\n        this.setState({loading:'loading'})\n        this.props.onSearchSubmit(this.state.inputValue)\n    }\n    render(){\n        return (\n            <div className=\"ui segment\">\n                <form className=\"ui form\" onSubmit={this.onFormSubmit} >\n                    <div className=\"field\">\n                        <div className={`ui fluid ${this.state.loading} search`}>\n                            <div className = \"ui massive icon input\">\n                                <input className=\"prompt\" type=\"text\" placeholder={this.state.inputValue} value={this.state.inputValue} onChange={(event)=>this.setState({inputValue:event.target.value})}/>\n                                <i className=\"search icon\" ></i>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )        \n    }\n}\n\nexport default SearchInput; ","import React from 'react';\nclass ImageComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {loaded : false}\n    }\n    render(){\n        //console.log(this.props)\n        return(\n            <div>\n                <div className=\"ui placeholder\" style={this.state.loaded ? {display:'none'}: {}}>\n                    <div className=\"ui image\" style={{width:this.props.width, height:this.props.height}}></div>\n                </div>\n                <img \n                    src={this.props.source}\n                    style = {this.state.loaded ? {} : {display:'none'}}\n                    onLoad = {()=>{\n                        this.setState({loaded:true});\n                        this.props.addLoadCount();\n                    \n                }}\n                    className=\"ui fluid image\"\n                    alt =\"profile-pic\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default ImageComponent;","import React from 'react';\nimport ImageComponent from './ImageComponent';\nclass ImageList extends React.Component{\n    constructor(props){\n        super(props)\n        this.loadCount = 0;\n        this.state = {images : [],view:props.view,inputValue:\"\"}\n        this.sIR = props.searchInputRef;\n    }\n    addLoadCount=()=>{\n        this.loadCount += 1;\n        if(this.loadCount === this.state.images.length){\n            this.props.searchInputRef.current.setState({loading:'category'})\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState){\n        if(nextState.images.length===0){\n            nextProps.searchInputRef.current.setState({loading:'category'});\n        }\n        return true;\n    }\n    downloadFile = (link) => {\n        window.location.href = link;\n      }\n    render(){\n        //console.log(this.props)\n        this.loadCount=0; // update load count once it is rendered (rendered only once on each submit)\n        const img = this.state.images.map((image)=>{   \n            if (this.state.view ==='grid'){\n            return (\n                <div className=\"eight wide column\" key = {image.id}>\n                <div className = \"ui fluid card\" >\n                <ImageComponent addLoadCount= {this.addLoadCount} source={image.largeImageURL} width={image.previewWidth} height={image.previewHeight}/>\n                </div>\n                </div>\n            )}\n            else{\n                return (\n                    <div className=\"item\" key={image.id}>\n                        <div className=\"ui fluid card\">\n                            <ImageComponent addLoadCount={this.addLoadCount} source={image.largeImageURL} width={image.previewWidth} height={image.previewHeight}/>\n                            <div className=\"content\">\n                                <div className=\"header\">{image.user}</div>\n                                <div className=\"meta\">\n                                    <i className=\"thumbs up outline icon\"/> {image.likes} <br></br>\n                                    <i className=\"arrow alternate circle down outline icon\"></i> {image.downloads} <br></br>\n                                    <button onClick={()=>window.location.href=image.largeImageURL} style={{marginTop:'3px'}} className=\"ui primary basic button\">\n                                        Download\n                                    </button>\n                                </div>\n                                <div className=\"description\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        })\n        if(this.state.images.length > 0){\n            if(this.state.view === 'grid'){\n            return (\n                <div className=\"ui grid\">\n                   {img}\n                </div>\n            )}\n            else{\n                return(\n                    <div className=\"ui divided items\">\n                        {img}\n                    </div>\n                )\n            }\n        }\n        else{\n            if(this.state.inputValue === \"\"){\n                return(\n                    <div className=\"ui placeholder segment\">\n                        <div className=\"ui icon header\">\n                            <i className=\"image outline icon\"></i>\n                            Start by typing in the search bar,<br></br>\n                            then press <em>ENTER</em>.\n                        </div>\n                    </div>\n                )\n            }\n            return(\n                <div className=\"ui placeholder segment\">\n                <div className=\"ui icon header\">\n                    <i className=\"frown outline icon\"></i>\n                    No image named<br></br>\n                    \"<em>{this.state.inputValue}</em>\"<br></br>\n                    was found.\n                </div>\n            </div>\n            )\n        }\n    }\n}\n\n\n\n\nexport default ImageList;","import React from 'react';\nclass ButtonComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = props.defaultButton === \"grid\" ? {gridButton:'primary',listButton:'secondary'} : {gridButton:'secondary',listButton:'primary'}\n    }\n    render(){\n        return (\n            <div style={{marginBottom:'13px',zIndex:1}} className=\"ui fluid icon buttons\">\n                <button onClick={this.props.onGridClick} className={`ui ${this.state.gridButton} basic button`}><i className=\"grid layout icon\"></i></button>\n                <button onClick={this.props.onListClick} className={`ui ${this.state.listButton} basic button`}><i className=\"list layout icon\"></i></button>\n            </div>\n        )\n    }\n}\n\nexport default ButtonComponent;","import React from 'react';\nclass PageButtonComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {buttonTexts : props.buttonTexts,clickedButtonIndex:props.clickedButtonIndex}\n    }\n    render(){\n        const buttons = this.state.buttonTexts.map((text,i)=>{\n            if(this.state.clickedButtonIndex ===i){\n                return (\n                    <button style={{marginLeft:'2px',marginRight:'2px'}} onClick = {()=>{alert(\"LoL , this doesn't do anything for now. \\n Have a nice day!\")}}className=\"ui black basic button\">{text}</button>\n                    ) \n            }\n            return (\n            <button style={{marginLeft:'2px',marginRight:'2px'}} onClick = {()=>{alert(\"LoL , this doesn't do anything for now. \\n Have a nice day!\")}}className=\"ui blue basic button\">{text}</button>\n            )\n        })\n        return(\n            <div class=\"ui icon buttons\"style={{marginBottom:\"5px\"}}>\n                {buttons}\n            </div>\n        )\n    }\n}\n\nexport default PageButtonComponent;","import React from 'react';\nimport SearchInput from './SearchInput.js';\nimport axios from 'axios';\nimport ImageList from './ImageList.js';\nimport ButtonComponent from './ButtonsComponent.js';\nimport PageButtonComponent from './PageButtonComponent.js'\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {images :[],inputValue:\"\",view:'grid',listButton:'secondary',gridButton:'primary'}\n        this.searchInputRef = React.createRef();\n        this.imageListRef = React.createRef();\n        this.buttonComponentRef = React.createRef();\n    }\n    onGridClick = ()=>{\n        this.buttonComponentRef.current.setState({gridButton:'primary',listButton:'secondary'})\n        this.imageListRef.current.setState({view:'grid'})\n    }\n    onListClick = ()=>{\n        this.buttonComponentRef.current.setState({gridButton:'secondary',listButton:'primary'})\n        this.imageListRef.current.setState({view:'list'})\n    }\n    onSearchSubmit= async (entry)=>{\n        //console.log(entry)\n        const response = await axios.get(`https://pixabay.com/api/?key=21844549-840acc6adaa37fac4e1186c8f&q=${entry.replace(\" \",\"+\")}&image_type=photo`)\n        //console.log(response.data.hits)\n        this.imageListRef.current.setState({images:response.data.hits,inputValue:entry})\n    }\n    render(){\n    return (\n        <div className=\"ui container\" style={{marginTop:'30px'}}>\n            \n            <div  className=\"ui huge header\" style={{marginLeft:'auto',marginRight:'auto'}}>Image Search</div>\n            <SearchInput ref={this.searchInputRef}  onSearchSubmit={this.onSearchSubmit} inputValue = {this.state.inputValue} loading='category'/>\n            <ButtonComponent onGridClick={this.onGridClick} onListClick={this.onListClick} ref={this.buttonComponentRef} defaultButton='grid'/>\n            <PageButtonComponent buttonTexts={[1,2,3,4,5,6]} clickedButtonIndex={0} />\n            <ImageList ref={this.imageListRef} searchInputRef={this.searchInputRef}   images={this.state.images} inputValue={this.state.inputValue} view = {this.state.view}/>\n        </div>\n    )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js'\n\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}